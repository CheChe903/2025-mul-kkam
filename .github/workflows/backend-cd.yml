name: backend-cd.yml

on:
  push:
    branches: [ "feat/40" ]
    paths:
      - 'backend/**'

jobs:
  build-and-push:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew
        working-directory: ./backend

      - name: Build project
        run: ./gradlew clean build -x test
        working-directory: ./backend

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          IMAGE_TAG="${{ github.sha }}"
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/mulkkam:$IMAGE_TAG ./backend
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/mulkkam:latest ./backend

      - name: Push Docker image
        run: |
          IMAGE_TAG="${{ github.sha }}"
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/mulkkam:$IMAGE_TAG
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/mulkkam:latest

  deploy:
    runs-on: self-hosted
    needs: build-and-push
    steps:
      - name: Stop and remove existing container
        run: |
          if [ "$(docker ps -q -f name=backend-app)" ]; then
            docker stop backend-app
            docker rm backend-app
          fi

      - name: Pull latest image
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/mulkkam:latest

      - name: Run new container
        run: |
          docker run -d \
            --name backend-app \
            -p 8080:8080 \
            -e SPRING_DATASOURCE_URL="${{ secrets.DATASOURCE_URL }}" \
            -e SPRING_DATASOURCE_USERNAME="${{ secrets.DATASOURCE_USERNAME }}" \
            -e SPRING_DATASOURCE_PASSWORD="${{ secrets.DATASOURCE_PASSWORD }}" \
            ${{ secrets.DOCKERHUB_USERNAME }}/mulkkam:latest

      - name: Clean up old Docker images
        run: |
          docker image prune -f
          docker system prune -f
